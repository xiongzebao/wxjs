<style lang="less">
  .container {
    display: flex;
    height: 100%;
    width: 100%;
  }
  .article {
    font-size: 25rpx;
    margin-top: 30rpx;
  }
  .title {
    font-size: 27rpx;
    color: red;
  }
  .canvasHigh {
    width: 100%;
    height: 400rpx;
  }
  .note{
    font-size: 28rpx;
    background-color: #efefef;
    padding: 10rpx;
  }
</style>

<template>
  <view class="container">
    <canvas canvas-id="spirit-canvas" class="canvasHigh"></canvas>
    <text class="note">  </text>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import BasePage from '@/pages/BasePage'
  import request from '../../js/NetUtils.js'
  import {
    ApiComInfo
  } from '../../js/url.js'
  export default class Index extends BasePage {
    config = {
      'navigationBarTitleText': '精气值',
      'navigationBarTextStyle': 'white',
      'navigationBarBackgroundColor': '#26a2ff',
      'disableScroll': false,
      'enablePullDownRefresh': false,
      'backgroundTextStyle': 'dark'
    }
    components = {}
    data = {
      context: {},
      position: {},
      obj: {},
      interval: {},
      winWidth: 0,
      winHeight: 0,
    }
    computed = {
      now() {
        return +new Date()
      }
    }
    drawItem(data) {
      this.drawSpirit(data);
    }
    
    drawSpirit(data) {
      let totalValue = data.totalValue
      let value = data.value
      let rx = data.rx;
      let ry = data.ry;
      let r = data.r;
      let per = value / totalValue;
      let topLineY = ry - r + 2 * r * (1 - per);
      let ctx = wx.createCanvasContext('spirit-canvas');
      ctx.beginPath()
      ctx.arc(rx, ry, r, 0, 2 * Math.PI) //rx,ry,r,起始弧度，单位弧度（在3点钟方向）,终止弧度
      ctx.clip()
      ctx.beginPath()
      ctx.setFontSize(8)
      // ctx.arc(100, 100, 50, 0, 1 * Math.PI)
      ctx.fillText(value + "ml", rx - 8.5, topLineY);
      // ctx.fillText("容量"+totalValue + "ml", rx - 15, ry - r+10);
      ctx.rect(rx - r, topLineY, rx + 2 * r, ry + 2 * r) //矩形路径左上角的横坐标,矩形路径左上角的纵坐标,矩形路径的宽度,矩形路径的高度
      ctx.setFillStyle('red')
      ctx.fill()
      ctx.beginPath()
      ctx.arc(rx, ry, r, -0.4 * Math.PI, 1.4 * Math.PI)
      ctx.setStrokeStyle('#333333')
      ctx.stroke()
      ctx.draw()
    }
    drawOne() {
      let data = {};
      data.totalValue = 100;
      data.value = 50;
      data.rx = this.winWidth / 2;
      data.ry = 100;
      data.r = 60;
      this.drawItem(data)
    }
    methods = {}
    events = {}
    onLoad() {
      let that = this;
      this.context = wx.createCanvasContext('myCanvas');
      wx.getSystemInfo({
        success: function(res) {
          that.winWidth = res.windowWidth;
          that.winHeight = res.windowHeight;
          that.$apply()
          that.drawOne();
        }
      })
    }
    onUnload() {}
  }
</script>